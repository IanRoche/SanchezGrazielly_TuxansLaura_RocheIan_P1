function init(self)
	msg.post(".", "acquire_input_focus")

	self.collision_id=nil
	self.dragged_id=nil
	self.dragged_pos=nil
	self.pressed=false	
	
end

function update(self, dt)
	msg.post("@render:", "clear_color",
	{color=vmath.vector4(95/256,129/256,161/256,1)})
	--self.WritePos()
	local l_Pos=go.get_position()
	label.set_text("#cursorLabel", "==== X: "..l_Pos.x.."   ==== Y:"..l_Pos.y)
	self.collision_id=nil
end
function on_message(self, message_id, message, sender)
	if message_id==hash("collision_response") then
		if not self.collision_id or go.get_position(self.collision_id).z<message.other_position.z then
			self.collision_id=message.other_id
		end
	end
end

function on_input(self, action_id, action)
	
	if not action_id or action_id==hash("touch") then
		local l_ActionPos=vmath.vector3(action.x,action.y,0)
		go.set_position(l_ActionPos)

		if action.pressed then
			msg.post("#collisionobject", "enable")
			self.pressed=true
		elseif action.released then
			msg.post("#collisionobject", "disable")
			self.pressed=false
			self.dragged_id=nil
			self.dragging=false

			local l_DesiredScale=vmath.vector3(1.0,1.0,1.0)
			print("Objeto clicado:")
			msg.post(self.collision_id, "clicked")

			print(self.collision_id)
		end

			
	end
end 
